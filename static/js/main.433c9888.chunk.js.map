{"version":3,"sources":["useInterval.js","utils.js","App.js","reportWebVitals.js","index.js"],"names":["useInterval","callback","delay","savedCallback","React","useRef","useEffect","current","interval","setInterval","clearInterval","minute","second","hour","day","countdown","date","gap","Date","getTime","textDay","Math","floor","textHour","textMinute","textSecond","DATE","App","useState","state","setState","open","setOpen","className","role","aria-label","class","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAmBeA,G,MAjBK,SAACC,EAAUC,GAC7B,IAAMC,EAAgBC,IAAMC,QAAO,eAEnCD,IAAME,WAAU,WACdH,EAAcI,QAAUN,KAG1BG,IAAME,WAAU,WACd,GAAc,OAAVJ,EAAgB,CAClB,IAAMM,EAAWC,aAAY,kBAAMN,EAAcI,YAAWL,GAAS,GACrE,OAAO,kBAAMQ,cAAcF,OAI5B,CAACN,MCfAS,EAASC,IACTC,EAAOF,KACPG,EAAa,GAAPD,EAENE,EAAY,SAACC,GACjB,IAEMC,EAFY,IAAIC,KAAKF,GAAMG,WACrB,IAAID,MAAOC,UAQvB,MAAO,CAAEC,QALOC,KAAKC,MAAML,EAAMH,GAKfS,SAJDF,KAAKC,MAAOL,EAAMH,EAAOD,GAIdW,WAHTH,KAAKC,MAAOL,EAAMJ,EAAQF,GAGLc,WAFrBJ,KAAKC,MAAOL,EAAMN,EAbxB,O,OCKTe,EAAO,2BAEE,SAASC,IAAO,IAAD,EACFC,oBAAS,kBAAMb,EAAUW,MADvB,mBACrBG,EADqB,KACdC,EADc,OAEJF,oBAAS,GAFL,mBAErBG,EAFqB,KAEfC,EAFe,KAGpBZ,EAA8CS,EAA9CT,QAASG,EAAqCM,EAArCN,SAAUC,EAA2BK,EAA3BL,WAAYC,EAAeI,EAAfJ,WACvCzB,GAAY,kBAAM8B,EAASf,EAAUW,MAAQ,KAQ7C,OACE,0BAASO,UAAU,cAAnB,UACE,sDAEE,sBAAMC,KAAK,MAAMC,aAAW,QAA5B,0BAGA,sBAAMD,KAAK,MAAMC,aAAW,UAA5B,0BAGA,sBAAMD,KAAK,MAAMC,aAAW,OAA5B,6BAIF,sBAAKF,UAAU,YAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIG,MAAM,MAAV,kBACA,oBAAIH,UAAU,aAAd,SAA4Bb,OAE9B,sBAAKa,UAAU,iBAAf,UACE,oBAAIG,MAAM,OAAV,mBACA,oBAAIH,UAAU,aAAd,SAA4BV,OAE9B,sBAAKU,UAAU,mBAAf,UACE,oBAAIG,MAAM,SAAV,kBACA,oBAAIH,UAAU,aAAd,SAA4BT,OAE9B,sBAAKS,UAAU,mBAAf,UACE,oBAAIG,MAAM,SAAV,kBACA,oBAAIH,UAAU,aAAd,SAA4BR,UAGhC,qBAAKQ,UAAU,SAASI,QAvCR,WAClBL,GAAQ,IAsCN,mCAGCD,EACC,sBAAKE,UAAU,SAAf,UACE,qBAAKI,QAxCQ,WACnBL,GAAQ,IAuC0BC,UAAU,YAAtC,kCAGA,wDACA,qBAAKA,UAAU,WAAf,64BAgBA,QC5EV,IAYeK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACtB,EAAD,MAEFuB,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.433c9888.chunk.js","sourcesContent":["import React from \"react\";\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = React.useRef(() => {});\n\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  React.useEffect(() => {\n    if (delay !== null) {\n      const interval = setInterval(() => savedCallback.current(), delay || 0);\n      return () => clearInterval(interval);\n    }\n\n    return undefined;\n  }, [delay]);\n};\n\nexport default useInterval;\n","const second = 1000;\nconst minute = second * 60;\nconst hour = minute * 60;\nconst day = hour * 24;\n\nconst countdown = (date) => {\n  const countDate = new Date(date).getTime();\n  const now = new Date().getTime();\n  const gap = countDate - now;\n\n  const textDay = Math.floor(gap / day);\n  const textHour = Math.floor((gap % day) / hour);\n  const textMinute = Math.floor((gap % hour) / minute);\n  const textSecond = Math.floor((gap % minute) / second);\n\n  return { textDay, textHour, textMinute, textSecond };\n};\n\nexport { countdown };\n","import \"./styles.css\";\nimport { useState } from \"react\";\nimport useInterval from \"./useInterval\";\nimport { countdown } from \"./utils\";\n\nconst DATE = \"August 18, 2021 00:00:00\";\n\nexport default function App() {\n  const [state, setState] = useState(() => countdown(DATE));\n  const [open, setOpen] = useState(false);\n  const { textDay, textHour, textMinute, textSecond } = state;\n  useInterval(() => setState(countdown(DATE)), 1000);\n  const onOpenModal = () => {\n    setOpen(true);\n  };\n\n  const onCloseModal = () => {\n    setOpen(false);\n  };\n  return (\n    <section className=\"coming-soon\">\n      <h2>\n        I am excited already\n        <span role=\"img\" aria-label=\"salut\">\n          🎉\n        </span>\n        <span role=\"img\" aria-label=\"salut-2\">\n          🎊\n        </span>\n        <span role=\"img\" aria-label=\"cake\">\n          🎂\n        </span>\n      </h2>\n      <div className=\"countdown\">\n        <div className=\"container-day\">\n          <h3 class=\"day\">Days</h3>\n          <h4 className=\"time-value\">{textDay}</h4>\n        </div>\n        <div className=\"container-hour\">\n          <h3 class=\"hour\">Hours</h3>\n          <h4 className=\"time-value\">{textHour}</h4>\n        </div>\n        <div className=\"container-minute\">\n          <h3 class=\"minute\">Mins</h3>\n          <h4 className=\"time-value\">{textMinute}</h4>\n        </div>\n        <div className=\"container-second\">\n          <h3 class=\"second\">Secs</h3>\n          <h4 className=\"time-value\">{textSecond}</h4>\n        </div>\n      </div>\n      <div className=\"button\" onClick={onOpenModal}>\n        Click me 😋\n      </div>\n      {open ? (\n        <div className=\"letter\">\n          <div onClick={onCloseModal} className=\"close-btn\">\n            Close me😚\n          </div>\n          <h2>I love you❤️</h2>\n          <div className=\"feelings\">\n            Hi baby you mean the world to me and my world's turning 20 in just\n            some time. You know na how much I love you (not 🤌🏾). I am already\n            super super excited to celebrate it and we will make it super\n            special for you okay? I just think about you full time and I miss\n            you so much (it keeps getting more and more everyday). But I know\n            that all this wait will be worth it when we meet. I wish I could be\n            with you in person to celebrate this special day, but I promise that\n            I will make up for it with extra special celebrations when we’re\n            next together!💥 You know it so difficult seeing other couples\n            meeting and we on the other hand are apart from each other for such\n            a long time. But I don’t regret a thing. I would rather have you far\n            away than not at all. I’m really lucky to have you in my life.\n            Here's to my world turning 20 years old! 🥳\n          </div>\n        </div>\n      ) : null}\n\n      {/* <img\n        className=\"waiting\"\n        src=\"./cake.svg\"\n        alt=\"woman is waiting near calendar\"\n      /> */}\n    </section>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}